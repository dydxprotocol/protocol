version: 2
jobs:
  checkout_and_install:
    docker:
      - image: circleci/node:9.11.1
    working_directory: ~/protocol
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependency-cache-{{ .Branch }}-{{ checksum "package-lock.json" }}
            - v1-dependency-cache-{{ .Branch }}-
            - v1-dependency-cache-
      - run:
          name: Install Dependencies
          command: npm install --quiet
      - save_cache:
          key: v1-dependency-cache-{{ .Branch }}-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - save_cache:
          key: protocol-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/protocol
  build:
    docker:
      - image: circleci/node:9.11.1
    working_directory: ~/protocol
    steps:
      - restore_cache:
          key: protocol-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Compile contracts
          command: npm run compile -- --all
      - save_cache:
          key: protocol-completed-build-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/protocol
  lint:
    docker:
      - image: circleci/node:9.11.1
    working_directory: ~/protocol
    steps:
      - restore_cache:
          key: protocol-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Lint
          command: npm run lint && npm run dydxlint && npm run solint
  test:
    docker:
      - image: circleci/node:9.11.1
    working_directory: ~/protocol
    parallelism: 2
    steps:
      - restore_cache:
          key: protocol-completed-build-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Test
          command: TESTFILES=$(circleci tests glob "test/**/*.js" | circleci tests split --split-by=timings) && TRUFFLE_REPORTER=true npm test -- ${TESTFILES}
          no_output_timeout: 20m
      - store_test_results:
          path: ~/protocol/junit
      - store_artifacts:
          path: ~/protocol/junit
  coverage:
    docker:
      - image: circleci/node:9.11.1
    working_directory: ~/protocol
    steps:
      - restore_cache:
          key: protocol-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Coverage
          command: python util/hideasserts.py && npm run coverage && cat coverage/lcov.info | node_modules/.bin/coveralls
          no_output_timeout: 40m
  prod_build:
    docker:
      - image: circleci/node:9.11.1
    working_directory: ~/protocol
    steps:
      - restore_cache:
          key: protocol-completed-build-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Build Javascript
          command: npm run build:js
      - run:
          name: Production Build
          command: sh scripts/prod_build.sh
      - save_cache:
          key: protocol-completed-prod-build-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/protocol
  publish:
    docker:
      - image: circleci/node:9.11.1
    working_directory: ~/protocol
    steps:
      - restore_cache:
          key: protocol-completed-prod-build-{{ .Environment.CIRCLE_SHA1 }}
      - add_ssh_keys:
          fingerprints:
            - "27:0f:9b:8a:19:8c:86:8f:4b:e8:28:01:69:08:ff:fb"
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/build/.npmrc
      - run:
          command: sh scripts/publish_if_not_exists.sh

workflows:
  version: 2
  build_and_test:
    jobs:
      - checkout_and_install
      - build:
          requires:
            - checkout_and_install
      - lint:
          requires:
            - checkout_and_install
      - test:
          requires:
            - build
      - coverage:
          requires:
            - checkout_and_install
      - prod_build:
          requires:
            - build
      - publish:
          requires:
            - prod_build
            - test
            - lint
          filters:
            branches:
              only: master
